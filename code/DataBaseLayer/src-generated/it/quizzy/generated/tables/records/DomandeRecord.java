/*
 * This file is generated by jOOQ.
 */
package it.quizzy.generated.tables.records;


import it.quizzy.generated.tables.Domande;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DomandeRecord extends UpdatableRecordImpl<DomandeRecord> implements Record5<Integer, Integer, Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>domande.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>domande.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>domande.id_quiz</code>.
     */
    public void setIdQuiz(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>domande.id_quiz</code>.
     */
    public Integer getIdQuiz() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>domande.numero_domanda</code>.
     */
    public void setNumeroDomanda(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>domande.numero_domanda</code>.
     */
    public Integer getNumeroDomanda() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>domande.tipo</code>.
     */
    public void setTipo(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>domande.tipo</code>.
     */
    public Integer getTipo() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>domande.obj</code>.
     */
    public void setObj(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>domande.obj</code>.
     */
    public String getObj() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, Integer, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Domande.DOMANDE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Domande.DOMANDE.ID_QUIZ;
    }

    @Override
    public Field<Integer> field3() {
        return Domande.DOMANDE.NUMERO_DOMANDA;
    }

    @Override
    public Field<Integer> field4() {
        return Domande.DOMANDE.TIPO;
    }

    @Override
    public Field<String> field5() {
        return Domande.DOMANDE.OBJ;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getIdQuiz();
    }

    @Override
    public Integer component3() {
        return getNumeroDomanda();
    }

    @Override
    public Integer component4() {
        return getTipo();
    }

    @Override
    public String component5() {
        return getObj();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getIdQuiz();
    }

    @Override
    public Integer value3() {
        return getNumeroDomanda();
    }

    @Override
    public Integer value4() {
        return getTipo();
    }

    @Override
    public String value5() {
        return getObj();
    }

    @Override
    public DomandeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DomandeRecord value2(Integer value) {
        setIdQuiz(value);
        return this;
    }

    @Override
    public DomandeRecord value3(Integer value) {
        setNumeroDomanda(value);
        return this;
    }

    @Override
    public DomandeRecord value4(Integer value) {
        setTipo(value);
        return this;
    }

    @Override
    public DomandeRecord value5(String value) {
        setObj(value);
        return this;
    }

    @Override
    public DomandeRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DomandeRecord
     */
    public DomandeRecord() {
        super(Domande.DOMANDE);
    }

    /**
     * Create a detached, initialised DomandeRecord
     */
    public DomandeRecord(Integer id, Integer idQuiz, Integer numeroDomanda, Integer tipo, String obj) {
        super(Domande.DOMANDE);

        setId(id);
        setIdQuiz(idQuiz);
        setNumeroDomanda(numeroDomanda);
        setTipo(tipo);
        setObj(obj);
        resetChangedOnNotNull();
    }
}
