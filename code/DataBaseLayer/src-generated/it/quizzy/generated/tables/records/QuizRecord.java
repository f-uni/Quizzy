/*
 * This file is generated by jOOQ.
 */
package it.quizzy.generated.tables.records;


import it.quizzy.generated.tables.Quiz;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuizRecord extends UpdatableRecordImpl<QuizRecord> implements Record4<Integer, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>quiz.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>quiz.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>quiz.id_docente</code>.
     */
    public void setIdDocente(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>quiz.id_docente</code>.
     */
    public Integer getIdDocente() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>quiz.titolo</code>.
     */
    public void setTitolo(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>quiz.titolo</code>.
     */
    public String getTitolo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>quiz.json_domande</code>.
     */
    public void setJsonDomande(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>quiz.json_domande</code>.
     */
    public String getJsonDomande() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Quiz.QUIZ.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Quiz.QUIZ.ID_DOCENTE;
    }

    @Override
    public Field<String> field3() {
        return Quiz.QUIZ.TITOLO;
    }

    @Override
    public Field<String> field4() {
        return Quiz.QUIZ.JSON_DOMANDE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getIdDocente();
    }

    @Override
    public String component3() {
        return getTitolo();
    }

    @Override
    public String component4() {
        return getJsonDomande();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getIdDocente();
    }

    @Override
    public String value3() {
        return getTitolo();
    }

    @Override
    public String value4() {
        return getJsonDomande();
    }

    @Override
    public QuizRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public QuizRecord value2(Integer value) {
        setIdDocente(value);
        return this;
    }

    @Override
    public QuizRecord value3(String value) {
        setTitolo(value);
        return this;
    }

    @Override
    public QuizRecord value4(String value) {
        setJsonDomande(value);
        return this;
    }

    @Override
    public QuizRecord values(Integer value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuizRecord
     */
    public QuizRecord() {
        super(Quiz.QUIZ);
    }

    /**
     * Create a detached, initialised QuizRecord
     */
    public QuizRecord(Integer id, Integer idDocente, String titolo, String jsonDomande) {
        super(Quiz.QUIZ);

        setId(id);
        setIdDocente(idDocente);
        setTitolo(titolo);
        setJsonDomande(jsonDomande);
        resetChangedOnNotNull();
    }
}
